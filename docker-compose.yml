services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: messenger_postgres
    environment:
      POSTGRES_DB: messenger_db
      POSTGRES_USER: messenger_user
      POSTGRES_PASSWORD: messenger_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - messenger_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U messenger_user -d messenger_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: messenger_backend
    environment:
      DATABASE_URL: postgresql://messenger_user:messenger_pass@postgres:5432/messenger_db
      SECRET_KEY: your-super-secret-key-change-in-production
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    volumes:
      - ./backend/uploads:/app/uploads
    ports:
      - "8000:8000"
    networks:
      - messenger_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8000
        VITE_WS_URL: ws://localhost:8000
    container_name: messenger_frontend
    ports:
      - "3000:80"
    networks:
      - messenger_network
    depends_on:
      - backend

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: messenger_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - messenger_network
    depends_on:
      - frontend
      - backend
    profiles:
      - production

volumes:
  postgres_data:

networks:
  messenger_network:
    driver: bridge